{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pP-wN1PZdEX2",
        "outputId": "99dc7f85-b5a1-4473-95ef-33d0d093180d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First 5 rows of the dataset:\n",
            "      ID  year loan_limit             Gender approv_in_adv loan_type  \\\n",
            "0  24890  2019         cf  Sex Not Available         nopre     type1   \n",
            "1  24891  2019         cf               Male         nopre     type2   \n",
            "2  24892  2019         cf               Male           pre     type1   \n",
            "3  24893  2019         cf               Male         nopre     type1   \n",
            "4  24894  2019         cf              Joint           pre     type1   \n",
            "\n",
            "  loan_purpose Credit_Worthiness open_credit business_or_commercial  ...  \\\n",
            "0           p1                l1        nopc                  nob/c  ...   \n",
            "1           p1                l1        nopc                    b/c  ...   \n",
            "2           p1                l1        nopc                  nob/c  ...   \n",
            "3           p4                l1        nopc                  nob/c  ...   \n",
            "4           p1                l1        nopc                  nob/c  ...   \n",
            "\n",
            "   credit_type  Credit_Score  co-applicant_credit_type    age  \\\n",
            "0          EXP           758                       CIB  25-34   \n",
            "1         EQUI           552                       EXP  55-64   \n",
            "2          EXP           834                       CIB  35-44   \n",
            "3          EXP           587                       CIB  45-54   \n",
            "4         CRIF           602                       EXP  25-34   \n",
            "\n",
            "   submission_of_application        LTV Region Security_Type  Status dtir1  \n",
            "0                    to_inst  98.728814  south        direct       1  45.0  \n",
            "1                    to_inst        NaN  North        direct       1   NaN  \n",
            "2                    to_inst  80.019685  south        direct       0  46.0  \n",
            "3                   not_inst  69.376900  North        direct       0  42.0  \n",
            "4                   not_inst  91.886544  North        direct       0  39.0  \n",
            "\n",
            "[5 rows x 34 columns]\n",
            "\n",
            "Dataset Info:\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 148670 entries, 0 to 148669\n",
            "Data columns (total 34 columns):\n",
            " #   Column                     Non-Null Count   Dtype  \n",
            "---  ------                     --------------   -----  \n",
            " 0   ID                         148670 non-null  int64  \n",
            " 1   year                       148670 non-null  int64  \n",
            " 2   loan_limit                 145326 non-null  object \n",
            " 3   Gender                     148670 non-null  object \n",
            " 4   approv_in_adv              147762 non-null  object \n",
            " 5   loan_type                  148670 non-null  object \n",
            " 6   loan_purpose               148536 non-null  object \n",
            " 7   Credit_Worthiness          148670 non-null  object \n",
            " 8   open_credit                148670 non-null  object \n",
            " 9   business_or_commercial     148670 non-null  object \n",
            " 10  loan_amount                148670 non-null  int64  \n",
            " 11  rate_of_interest           112231 non-null  float64\n",
            " 12  Interest_rate_spread       112031 non-null  float64\n",
            " 13  Upfront_charges            109028 non-null  float64\n",
            " 14  term                       148629 non-null  float64\n",
            " 15  Neg_ammortization          148549 non-null  object \n",
            " 16  interest_only              148670 non-null  object \n",
            " 17  lump_sum_payment           148670 non-null  object \n",
            " 18  property_value             133572 non-null  float64\n",
            " 19  construction_type          148670 non-null  object \n",
            " 20  occupancy_type             148670 non-null  object \n",
            " 21  Secured_by                 148670 non-null  object \n",
            " 22  total_units                148670 non-null  object \n",
            " 23  income                     139520 non-null  float64\n",
            " 24  credit_type                148670 non-null  object \n",
            " 25  Credit_Score               148670 non-null  int64  \n",
            " 26  co-applicant_credit_type   148670 non-null  object \n",
            " 27  age                        148470 non-null  object \n",
            " 28  submission_of_application  148470 non-null  object \n",
            " 29  LTV                        133572 non-null  float64\n",
            " 30  Region                     148670 non-null  object \n",
            " 31  Security_Type              148670 non-null  object \n",
            " 32  Status                     148670 non-null  int64  \n",
            " 33  dtir1                      124549 non-null  float64\n",
            "dtypes: float64(8), int64(5), object(21)\n",
            "memory usage: 38.6+ MB\n",
            "\n",
            "Descriptive Statistics:\n",
            "                  ID      year   loan_amount  rate_of_interest  \\\n",
            "count  148670.000000  148670.0  1.486700e+05     112231.000000   \n",
            "mean    99224.500000    2019.0  3.311177e+05          4.045476   \n",
            "std     42917.476598       0.0  1.839093e+05          0.561391   \n",
            "min     24890.000000    2019.0  1.650000e+04          0.000000   \n",
            "25%     62057.250000    2019.0  1.965000e+05          3.625000   \n",
            "50%     99224.500000    2019.0  2.965000e+05          3.990000   \n",
            "75%    136391.750000    2019.0  4.365000e+05          4.375000   \n",
            "max    173559.000000    2019.0  3.576500e+06          8.000000   \n",
            "\n",
            "       Interest_rate_spread  Upfront_charges           term  property_value  \\\n",
            "count         112031.000000    109028.000000  148629.000000    1.335720e+05   \n",
            "mean               0.441656      3224.996127     335.136582    4.978935e+05   \n",
            "std                0.513043      3251.121510      58.409084    3.599353e+05   \n",
            "min               -3.638000         0.000000      96.000000    8.000000e+03   \n",
            "25%                0.076000       581.490000     360.000000    2.680000e+05   \n",
            "50%                0.390400      2596.450000     360.000000    4.180000e+05   \n",
            "75%                0.775400      4812.500000     360.000000    6.280000e+05   \n",
            "max                3.357000     60000.000000     360.000000    1.650800e+07   \n",
            "\n",
            "              income   Credit_Score            LTV         Status  \\\n",
            "count  139520.000000  148670.000000  133572.000000  148670.000000   \n",
            "mean     6957.338876     699.789103      72.746457       0.246445   \n",
            "std      6496.586382     115.875857      39.967603       0.430942   \n",
            "min         0.000000     500.000000       0.967478       0.000000   \n",
            "25%      3720.000000     599.000000      60.474860       0.000000   \n",
            "50%      5760.000000     699.000000      75.135870       0.000000   \n",
            "75%      8520.000000     800.000000      86.184211       0.000000   \n",
            "max    578580.000000     900.000000    7831.250000       1.000000   \n",
            "\n",
            "               dtir1  \n",
            "count  124549.000000  \n",
            "mean       37.732932  \n",
            "std        10.545435  \n",
            "min         5.000000  \n",
            "25%        31.000000  \n",
            "50%        39.000000  \n",
            "75%        45.000000  \n",
            "max        61.000000  \n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Load the dataset\n",
        "df = pd.read_csv('/content/Loan_Default.csv')\n",
        "\n",
        "# Display the first few rows\n",
        "print(\"First 5 rows of the dataset:\")\n",
        "print(df.head())\n",
        "\n",
        "# Get a summary of the dataframe, including data types and non-null values\n",
        "print(\"\\nDataset Info:\")\n",
        "df.info()\n",
        "\n",
        "# Get descriptive statistics for numerical columns\n",
        "print(\"\\nDescriptive Statistics:\")\n",
        "print(df.describe())"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check for missing values in each column\n",
        "print(\"\\nMissing Values:\")\n",
        "print(df.isnull().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FZ9SLbPd49nv",
        "outputId": "d210b892-531a-4af1-9f55-bd7622b07068"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Missing Values:\n",
            "ID                               0\n",
            "year                             0\n",
            "loan_limit                    3344\n",
            "Gender                           0\n",
            "approv_in_adv                  908\n",
            "loan_type                        0\n",
            "loan_purpose                   134\n",
            "Credit_Worthiness                0\n",
            "open_credit                      0\n",
            "business_or_commercial           0\n",
            "loan_amount                      0\n",
            "rate_of_interest             36439\n",
            "Interest_rate_spread         36639\n",
            "Upfront_charges              39642\n",
            "term                            41\n",
            "Neg_ammortization              121\n",
            "interest_only                    0\n",
            "lump_sum_payment                 0\n",
            "property_value               15098\n",
            "construction_type                0\n",
            "occupancy_type                   0\n",
            "Secured_by                       0\n",
            "total_units                      0\n",
            "income                        9150\n",
            "credit_type                      0\n",
            "Credit_Score                     0\n",
            "co-applicant_credit_type         0\n",
            "age                            200\n",
            "submission_of_application      200\n",
            "LTV                          15098\n",
            "Region                           0\n",
            "Security_Type                    0\n",
            "Status                           0\n",
            "dtir1                        24121\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "EDA - EDA to understand data structure, relationships, missing values, and outliers. Visualize key distributions and correlations."
      ],
      "metadata": {
        "id": "cV7DuDRJAcrf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "sns.set_style('whitegrid')\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.countplot(x='Status', data=df)\n",
        "plt.title('Distribution of Loan Status (0 = No Default, 1 = Default)')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "_xzz8SX95bsD",
        "outputId": "37506471-7784-4190-a270-e620f56e215a"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, axes = plt.subplots(1, 2, figsize=(16, 6))\n",
        "\n",
        "sns.histplot(df['Credit_Score'], bins=30, ax=axes[0], kde=True)\n",
        "axes[0].set_title('Distribution of Credit Score')\n",
        "\n",
        "sns.histplot(df['loan_amount'], bins=30, ax=axes[1], kde=True)\n",
        "axes[1].set_title('Distribution of Loan Amount')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "rRBQQmWQ_KSh",
        "outputId": "e0329102-3ffe-49c7-cf24-265b51b84a57"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "sns.countplot(x='loan_purpose', hue='Status', data=df)\n",
        "plt.title('Loan Purpose vs. Loan Status')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "lqnyoriaAAYw",
        "outputId": "add97f97-fb00-48aa-8bd6-d4e391596491"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Clean and preprocess the data by handling missing values, encoding categorical features, and scaling numerical variables. Split the data into training and testing sets."
      ],
      "metadata": {
        "id": "cV7LmQmMAlDF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(['ID', 'year'], axis=1, inplace=True)\n",
        "\n",
        "# You can add this line to confirm the columns are gone\n",
        "print(df.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LWFu6HELApLt",
        "outputId": "6cb7093f-d618-405b-99c0-50880520835e"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['loan_limit', 'Gender', 'approv_in_adv', 'loan_type', 'loan_purpose',\n",
            "       'Credit_Worthiness', 'open_credit', 'business_or_commercial',\n",
            "       'loan_amount', 'rate_of_interest', 'Interest_rate_spread',\n",
            "       'Upfront_charges', 'term', 'Neg_ammortization', 'interest_only',\n",
            "       'lump_sum_payment', 'property_value', 'construction_type',\n",
            "       'occupancy_type', 'Secured_by', 'total_units', 'income', 'credit_type',\n",
            "       'Credit_Score', 'co-applicant_credit_type', 'age',\n",
            "       'submission_of_application', 'LTV', 'Region', 'Security_Type', 'Status',\n",
            "       'dtir1'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Function to convert age range to its average\n",
        "def clean_age(age):\n",
        "    if isinstance(age, str):\n",
        "        if '-' in age:\n",
        "            low, high = age.split('-')\n",
        "            return (int(low) + int(high)) / 2\n",
        "        elif '>' in age:\n",
        "            return int(age.strip('>'))\n",
        "    return age # Return the value as is if it's not a string or is NaN\n",
        "\n",
        "# Apply the function to the 'age' column\n",
        "df['age'] = df['age'].apply(clean_age)\n",
        "\n",
        "# Check the first few values of the cleaned column\n",
        "print(\"Cleaned 'age' column sample:\")\n",
        "print(df['age'].head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jxYXSerWBQdH",
        "outputId": "702e9a88-6641-47e2-eba1-10c91857165b"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cleaned 'age' column sample:\n",
            "0    29.5\n",
            "1    59.5\n",
            "2    39.5\n",
            "3    49.5\n",
            "4    29.5\n",
            "Name: age, dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Separate columns by their data type\n",
        "numerical_cols = df.select_dtypes(include=['int64', 'float64']).columns\n",
        "categorical_cols = df.select_dtypes(include=['object']).columns\n",
        "\n",
        "# Fill missing numerical columns with the median\n",
        "for col in numerical_cols:\n",
        "    df[col].fillna(df[col].median(), inplace=True)\n",
        "\n",
        "# Fill missing categorical columns with the mode\n",
        "for col in categorical_cols:\n",
        "    df[col].fillna(df[col].mode()[0], inplace=True)\n",
        "\n",
        "# Verify that all missing values are gone\n",
        "print(\"Total missing values remaining:\", df.isnull().sum().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pWR-FTs7BeWu",
        "outputId": "06399129-2c97-48b2-f10e-88c7b946947f"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-550135967.py:7: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df[col].fillna(df[col].median(), inplace=True)\n",
            "/tmp/ipython-input-550135967.py:11: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df[col].fillna(df[col].mode()[0], inplace=True)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total missing values remaining: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_processed = pd.get_dummies(df, drop_first=True)\n",
        "\n",
        "# Display the first few rows of the new processed DataFrame\n",
        "print(\"DataFrame after one-hot encoding:\")\n",
        "print(df_processed.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hj8Qx7oCBlul",
        "outputId": "221e12bb-2c8b-46be-8714-204e49b7b8d0"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame after one-hot encoding:\n",
            "   loan_amount  rate_of_interest  Interest_rate_spread  Upfront_charges  \\\n",
            "0       116500              3.99                0.3904          2596.45   \n",
            "1       206500              3.99                0.3904          2596.45   \n",
            "2       406500              4.56                0.2000           595.00   \n",
            "3       456500              4.25                0.6810          2596.45   \n",
            "4       696500              4.00                0.3042             0.00   \n",
            "\n",
            "    term  property_value   income  Credit_Score        LTV  Status  ...  \\\n",
            "0  360.0        118000.0   1740.0           758  98.728814       1  ...   \n",
            "1  360.0        418000.0   4980.0           552  75.135870       1  ...   \n",
            "2  360.0        508000.0   9480.0           834  80.019685       0  ...   \n",
            "3  360.0        658000.0  11880.0           587  69.376900       0  ...   \n",
            "4  360.0        758000.0  10440.0           602  91.886544       0  ...   \n",
            "\n",
            "   age_49.5  age_59.5  age_69.5  age_74  age_<25  \\\n",
            "0     False     False     False   False    False   \n",
            "1     False      True     False   False    False   \n",
            "2     False     False     False   False    False   \n",
            "3      True     False     False   False    False   \n",
            "4     False     False     False   False    False   \n",
            "\n",
            "   submission_of_application_to_inst  Region_North-East  Region_central  \\\n",
            "0                               True              False           False   \n",
            "1                               True              False           False   \n",
            "2                               True              False           False   \n",
            "3                              False              False           False   \n",
            "4                              False              False           False   \n",
            "\n",
            "   Region_south  Security_Type_direct  \n",
            "0          True                  True  \n",
            "1         False                  True  \n",
            "2          True                  True  \n",
            "3         False                  True  \n",
            "4         False                  True  \n",
            "\n",
            "[5 rows x 49 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# 1. Define features (X) and target (y)\n",
        "X = df_processed.drop('Status', axis=1)\n",
        "y = df_processed['Status']\n",
        "\n",
        "# 2. Split data into 80% training and 20% testing\n",
        "# We use 'stratify=y' to ensure the train and test sets have the same proportion of defaults\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)\n",
        "\n",
        "# 3. Scale the feature data\n",
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n",
        "\n",
        "print(\"Data has been split and scaled.\")\n",
        "print(\"Shape of X_train:\", X_train.shape)\n",
        "print(\"Shape of X_test:\", X_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2y5utz68Bxha",
        "outputId": "1f70d33b-e675-4bc2-875a-57a6a0d1b88b"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data has been split and scaled.\n",
            "Shape of X_train: (118936, 48)\n",
            "Shape of X_test: (29734, 48)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Build and evaluate multiple classification models (Logistic Regression, Decision Trees, etc.) to predict loan default. Select the best model based on performance metrics."
      ],
      "metadata": {
        "id": "JQAq9agMCMc_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n",
        "\n",
        "# 1. Initialize and train the Logistic Regression model\n",
        "log_reg = LogisticRegression(random_state=42)\n",
        "log_reg.fit(X_train, y_train)\n",
        "\n",
        "# 2. Make predictions on the test data\n",
        "y_pred_log_reg = log_reg.predict(X_test)\n",
        "\n",
        "# 3. Evaluate the model's performance\n",
        "print(\"--- Logistic Regression Evaluation ---\")\n",
        "print(\"\\nAccuracy:\", accuracy_score(y_test, y_pred_log_reg))\n",
        "print(\"\\nConfusion Matrix:\\n\", confusion_matrix(y_test, y_pred_log_reg))\n",
        "print(\"\\nClassification Report:\\n\", classification_report(y_test, y_pred_log_reg))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mw4V3n-SCM62",
        "outputId": "1209f0c4-e7f3-4688-f547-4ea46fd69e05"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--- Logistic Regression Evaluation ---\n",
            "\n",
            "Accuracy: 0.8744198560570391\n",
            "\n",
            "Confusion Matrix:\n",
            " [[22117   289]\n",
            " [ 3445  3883]]\n",
            "\n",
            "Classification Report:\n",
            "               precision    recall  f1-score   support\n",
            "\n",
            "           0       0.87      0.99      0.92     22406\n",
            "           1       0.93      0.53      0.68      7328\n",
            "\n",
            "    accuracy                           0.87     29734\n",
            "   macro avg       0.90      0.76      0.80     29734\n",
            "weighted avg       0.88      0.87      0.86     29734\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Interpreting the Logistic Regression Performance\n",
        "Your model achieved an overall accuracy of 87.4%, which seems good on the surface. However, the Classification Report gives us a much clearer picture:\n",
        "\n",
        "Precision (for class 1): 0.93 - This is excellent. It means that when your model predicts a loan will default, it is correct 93% of the time.\n",
        "\n",
        "Recall (for class 1): 0.53 - This is the model's weak point. It only managed to identify 53% of all the loans that actually defaulted. This means it missed almost half of the risky loans.\n",
        "\n",
        "In simple terms: The model is very careful and accurate when it does flag a loan as a default risk, but it's not very good at finding all the risky loans in the first place."
      ],
      "metadata": {
        "id": "15InYZzECmKS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import DecisionTreeClassifier\n",
        "\n",
        "# 1. Initialize and train the Decision Tree model\n",
        "dec_tree = DecisionTreeClassifier(random_state=42)\n",
        "dec_tree.fit(X_train, y_train)\n",
        "\n",
        "# 2. Make predictions on the test data\n",
        "y_pred_dec_tree = dec_tree.predict(X_test)\n",
        "\n",
        "# 3. Evaluate the model's performance\n",
        "print(\"--- Decision Tree Evaluation ---\")\n",
        "print(\"\\nAccuracy:\", accuracy_score(y_test, y_pred_dec_tree))\n",
        "print(\"\\nConfusion Matrix:\\n\", confusion_matrix(y_test, y_pred_dec_tree))\n",
        "print(\"\\nClassification Report:\\n\", classification_report(y_test, y_pred_dec_tree))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EIv4gMwfCnwJ",
        "outputId": "3f35545f-01f0-4835-c851-b3d9f529de03"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--- Decision Tree Evaluation ---\n",
            "\n",
            "Accuracy: 1.0\n",
            "\n",
            "Confusion Matrix:\n",
            " [[22406     0]\n",
            " [    0  7328]]\n",
            "\n",
            "Classification Report:\n",
            "               precision    recall  f1-score   support\n",
            "\n",
            "           0       1.00      1.00      1.00     22406\n",
            "           1       1.00      1.00      1.00      7328\n",
            "\n",
            "    accuracy                           1.00     29734\n",
            "   macro avg       1.00      1.00      1.00     29734\n",
            "weighted avg       1.00      1.00      1.00     29734\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "A perfect score! An accuracy of 100% is a major red flag in machine learning and a classic sign of overfitting. 🚩"
      ],
      "metadata": {
        "id": "OENmJ0k3DGDe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Selecting the Best Model\n",
        "Even though its scores are lower, the Logistic Regression is the better and more reliable model right now. Its performance (87% accuracy, 53% recall) is a much more realistic reflection of how it would perform on brand-new loan applications. The Decision Tree is too perfect to be trusted"
      ],
      "metadata": {
        "id": "sqns658eDliF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Identify and rank the top predictors contributing to loan default prediction."
      ],
      "metadata": {
        "id": "QGn_mfBRDlDh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a DataFrame of feature importances from the Decision Tree\n",
        "feature_importances = pd.DataFrame({\n",
        "    'feature': X.columns,\n",
        "    'importance': dec_tree.feature_importances_\n",
        "}).sort_values('importance', ascending=False)\n",
        "\n",
        "# Display the top 10 features\n",
        "print(\"Top 10 most important features:\")\n",
        "print(feature_importances.head(10))\n",
        "\n",
        "# Visualize the top 10 features\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.barplot(x='importance', y='feature', data=feature_importances.head(10))\n",
        "plt.title('Top 10 Features Contributing to Loan Default Prediction')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 926
        },
        "id": "2EOXLTK-DJiA",
        "outputId": "3450bf80-fd6b-4a44-d233-9e0a1770c810"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Top 10 most important features:\n",
            "                 feature  importance\n",
            "2   Interest_rate_spread    0.651418\n",
            "34      credit_type_EQUI    0.348084\n",
            "3        Upfront_charges    0.000452\n",
            "1       rate_of_interest    0.000045\n",
            "4                   term    0.000000\n",
            "5         property_value    0.000000\n",
            "6                 income    0.000000\n",
            "0            loan_amount    0.000000\n",
            "8                    LTV    0.000000\n",
            "9                  dtir1    0.000000\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Summarize findings and provide recommendations for improving loan default prediction and decision-making processes."
      ],
      "metadata": {
        "id": "_7uevvI8EMHI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Final Summary Report\n",
        "Key Findings\n",
        "Data Quality: The initial dataset had significant issues with missing values (especially in rate_of_interest and dtir1) and was imbalanced, with loan defaults (Status=1) representing only about 25% of the cases.\n",
        "\n",
        "Model Performance: Two models were built:\n",
        "\n",
        "Logistic Regression: Achieved a realistic accuracy of 87% but had a low recall of 53% for the default class, meaning it failed to identify almost half of the actual defaulters.\n",
        "\n",
        "Decision Tree: Achieved a perfect but unrealistic accuracy of 100%, indicating severe overfitting.\n",
        "\n",
        "Best Model Selection: The Logistic Regression model is the most reliable choice for a real-world application, as its performance is more believable and less likely to be a result of memorizing the training data.\n",
        "\n",
        "Key Predictors: According to the overfit Decision Tree, Interest_rate_spread and credit_type_EQUI were the only two features needed to predict default. This is a suspicious result that points more to a data pattern than a reliable predictive rule.\n",
        "\n",
        "Business Recommendations\n",
        "Investigate the Dominant Features: Before deploying any model, a critical investigation is needed to understand why Interest_rate_spread and credit_type_EQUI are so overwhelmingly predictive. This could be a data error or data leakage. If the relationship is legitimate, the business logic behind it must be understood.\n",
        "\n",
        "Focus on Improving Recall: For a loan-default problem, failing to identify a defaulter (low recall) is often more costly than misclassifying a good applicant. Future modeling efforts should focus on techniques to improve the recall of the Logistic Regression model, even if it slightly lowers overall accuracy.\n",
        "\n",
        "Refine Feature Engineering: Since many logically important features like Credit_Score, income, and LTV showed zero importance, it suggests the model could not extract a useful signal from them. Further work could be done to create more meaningful features from the existing data to build a more robust and intuitive model."
      ],
      "metadata": {
        "id": "oPpsmv8bESVi"
      }
    }
  ]
}